name: Deploy and Run with Cargo (Start and Stop)

on:
  push:
    branches: [ "master" ]  # ← デプロイ対象ブランチ

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. ソースコードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Maven Wrapper に実行権限を付与
      - name: Make Maven Wrapper executable
        run: chmod +x ./mvnw

      # 3. Mavenでビルド（warファイル生成）
      - name: Build with Maven
        run: ./mvnw clean package

      # 4. プロジェクト全体をEC2にコピー
      - name: Copy project to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "."  # プロジェクト全体をコピー
          target: "/home/${{ secrets.EC2_USER }}/jpetstore"

      # 5. EC2上で cargo:run をバックグラウンドで起動 → ログ確認 → 停止
      - name: Run Cargo temporarily and stop
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}/jpetstore
            echo "✅ ディレクトリ移動完了"

            chmod +x ./mvnw
            echo "✅ Maven Wrapper に実行権限を付与"

            echo "🚀 Cargo をバックグラウンドで起動中..."
            nohup ./mvnw cargo:run -P tomcat90 > app.log 2>&1 &

            echo "⏳ Cargo の起動を待機中..."
            timeout 60 bash -c 'until grep -q "Press Ctrl-C to stop the container" app.log; do sleep 2; done' || echo "⚠️ 起動確認メッセージが見つかりませんでした"

            echo "📄 Cargo ログの一部を表示："
            tail -n 20 app.log

            echo "🛑 Cargo プロセスを停止中..."
            pkill -f 'org.codehaus.cargo' || echo "⚠️ Cargo プロセスが見つかりませんでした"

            echo "✅ デプロイ完了 & ジョブ終了"
